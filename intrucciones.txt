<!DOCTYPE html>
<!--
 @license
 Copyright 2019 Google LLC. All Rights Reserved.
 SPDX-License-Identifier: Apache-2.0
-->
<html>
  <head>
    <title>Simple Map</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

    <link rel="stylesheet" type="text/css" href="./style.css" />
    <script type="module" src="./index.ts"></script>
  </head>
  <body>
    <div id="map"></div>

    <!-- prettier-ignore -->
    <script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
        ({key: "AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg", v: "weekly"});</script>
  </body>
</html>



ts

/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

let map: google.maps.Map;
async function initMap(): Promise<void> {
  //@ts-ignore
  const { Map } = await google.maps.importLibrary("maps");
  map = new Map(document.getElementById("map") as HTMLElement, {
    center: { lat: -34.397, lng: 150.644 },
    zoom: 8,
  });
}

initMap();
export {};



--------------------------
Run a Google Maps Platform JS sample in Google Cloud Shell
Introduction
This tutorial will walk through the process of running a web application from the sample using TypeScript and Vite.

For feedback related to this sample, please open a new issue on GitHub.

Click the Start button to continue.

Install and run the application
Open Cloud Shell by clicking the button in the navigation bar in the upper-right corner of the console.

To install the application and its requirements, run the following command.

npm i
After installation, Vite can be called using the following command.

npm start -- --port=8080
For configuration of Vite, check vite.config.js.

Enable Web Preview in the Google Cloud Shell
Once your app is built (should take a few moments), you can launch it via Web Preview button using the port 8080.

Update the Google Maps API key
The application is currently using the .env file to embed the API key in the HTML document. This is a temporary key and is not valid for production usage.

The key can be replaced by following these instructions to get an api key.

After changing the key, the Webpack server must be restarted with the following command:

npm start -- --port=8080
Inspect and edit the application files
There are three main files for this sample:

src/index.ts
src/index.html
src/style.css
Try editing the src/index.ts file and see how the web application in the web preview immediately reloads with the changes.

Conclusion

Congratulations! You've just launched a web application using the Google Maps Platform JS API.



git clone -b sample-map-simple https://github.com/googlemaps/js-samples.git


https://developers.google.com/maps/documentation/javascript/examples/map-simple
